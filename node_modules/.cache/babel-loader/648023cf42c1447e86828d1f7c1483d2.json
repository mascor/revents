{"ast":null,"code":"var _jsxFileName = \"/Users/massimilianocorvino/Desktop/temp/revents/src/app/common/form/MySelectInput.jsx\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport { FormField, Label, Select } from 'semantic-ui-react';\nexport default function MySelectInput({\n  label,\n  ...props\n}) {\n  const [field, meta, helpers] = useField(props);\n  return /*#__PURE__*/React.createElement(FormField, {\n    error: meta.touched && !!meta.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(Select, Object.assign({\n    clearable: true,\n    value: field.value || null,\n    onChange: (e, d) => helpers.setValue(d.value),\n    onBlur: () => helpers.setTouched(true)\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, meta.error) : null);\n}","map":{"version":3,"sources":["/Users/massimilianocorvino/Desktop/temp/revents/src/app/common/form/MySelectInput.jsx"],"names":["React","useField","FormField","Label","Select","MySelectInput","label","props","field","meta","helpers","touched","error","value","e","d","setValue","setTouched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,QAAyC,mBAAzC;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA,KAAD;AAAQ,KAAGC;AAAX,CAAvB,EAA0C;AACrD,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,OAAd,IAAyBT,QAAQ,CAACM,KAAD,CAAvC;AACA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,IAAI,CAACE,OAAL,IAAgB,CAAC,CAACF,IAAI,CAACG,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,KAAR,CADJ,eAEI,oBAAC,MAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,KAAK,EAAEE,KAAK,CAACK,KAAN,IAAe,IAF1B;AAGI,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUL,OAAO,CAACM,QAAR,CAAiBD,CAAC,CAACF,KAAnB,CAHxB;AAII,IAAA,MAAM,EAAE,MAAMH,OAAO,CAACO,UAAR,CAAmB,IAAnB;AAJlB,KAKQV,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EASKE,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAArB,gBACG,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,IAAI,CAACG,KAA/B,CADH,GAEG,IAXR,CADJ;AAeH","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport { FormField, Label, Select } from 'semantic-ui-react';\n\nexport default function MySelectInput({label, ...props}) {\n    const [field, meta, helpers] = useField(props);\n    return (\n        <FormField error={meta.touched && !!meta.error}>\n            <label>{label}</label>\n            <Select \n                clearable\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                {...props}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </FormField>\n    )\n}"]},"metadata":{},"sourceType":"module"}