{"ast":null,"code":"export const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport function increment(amount) {\n  return {\n    type: INCREMENT_COUNTER,\n    payload: amount\n  };\n}\nexport function decrement(amount) {\n  return {\n    type: DECREMENT_COUNTER,\n    payload: amount\n  };\n}\nconst initialState = {\n  data: 42\n};\nexport default function testReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case INCREMENT_COUNTER:\n      return { ...state,\n        data: state.data + payload\n      };\n\n    case DECREMENT_COUNTER:\n      return { ...state,\n        data: state.data - payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/massimilianocorvino/Desktop/temp/revents/src/features/sandbox/testReducer.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","increment","amount","type","payload","decrement","initialState","data","testReducer","state"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,iBADH;AAEHK,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH;AAED,OAAO,SAASG,SAAT,CAAmBH,MAAnB,EAA2B;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEH,iBADH;AAEHI,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH;AAGD,MAAMI,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2C;AAACH,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAA3C,EAA4D;AACzE,UAAQD,IAAR;AACE,SAAKJ,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,GAAaH;AAFd,OAAP;;AAIF,SAAKJ,iBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,GAAaH;AAFd,OAAP;;AAIF;AACE,aAAOK,KAAP;AAZJ;AAcD","sourcesContent":["export const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\n\nexport function increment(amount) {\n    return {\n        type: INCREMENT_COUNTER,\n        payload: amount\n    }\n}\n\nexport function decrement(amount) {\n    return {\n        type: DECREMENT_COUNTER,\n        payload: amount\n    }\n}\n\n\nconst initialState = {\n  data: 42,\n};\n\nexport default function testReducer(state = initialState, {type, payload}) {\n  switch (type) {\n    case INCREMENT_COUNTER:\n      return {\n        ...state,\n        data: state.data + payload,\n      };\n    case DECREMENT_COUNTER:\n      return {\n        ...state,\n        data: state.data - payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}