{"ast":null,"code":"import { sampleData } from '../../app/api/sampleData';\nimport { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from './eventConstants';\nconst initialState = {\n  events: sampleData\n};\nexport default function eventReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case CREATE_EVENT:\n      return { ...state,\n        events: [...state.events, payload]\n      };\n\n    case UPDATE_EVENT:\n      return { ...state,\n        events: [...state.events.filter(evt => evt.id !== payload.id), payload]\n      };\n\n    case DELETE_EVENT:\n      return { ...state,\n        events: [...state.events.filter(evt => evt.id !== payload)]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/massimilianocorvino/Desktop/temp/revents/src/features/events/eventReducer.js"],"names":["sampleData","CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","initialState","events","eventReducer","state","type","payload","filter","evt","id"],"mappings":"AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,QAAyD,kBAAzD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAEL;AADW,CAArB;AAIA,eAAe,SAASM,YAAT,CAAsBC,KAAK,GAAGH,YAA9B,EAA4C;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5C,EAA+D;AAC5E,UAAQD,IAAR;AACE,SAAKP,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBI,OAAlB;AAFH,OAAP;;AAIF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,MAAM,EAAE,CACN,GAAGE,KAAK,CAACF,MAAN,CAAaK,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWH,OAAO,CAACG,EAAhD,CADG,EAENH,OAFM;AAFH,OAAP;;AAOF,SAAKN,YAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAN,CAAaK,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWH,OAAxC,CAAJ;AAFH,OAAP;;AAIF;AACE,aAAOF,KAAP;AApBJ;AAsBD","sourcesContent":["import { sampleData } from '../../app/api/sampleData';\nimport { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from './eventConstants';\n\nconst initialState = {\n  events: sampleData,\n};\n\nexport default function eventReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case CREATE_EVENT:\n      return {\n        ...state,\n        events: [...state.events, payload],\n      };\n    case UPDATE_EVENT:\n      return {\n        ...state,\n        events: [\n          ...state.events.filter((evt) => evt.id !== payload.id),\n          payload,\n        ],\n      };\n    case DELETE_EVENT:\n      return {\n        ...state,\n        events: [...state.events.filter((evt) => evt.id !== payload)],\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}