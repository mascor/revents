{"ast":null,"code":"var _jsxFileName = \"/Users/massimilianocorvino/Desktop/temp/revents/src/features/events/eventDashboard/EventDashboard.jsx\";\nimport React, { useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EventList from './EventList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EventListItemPlaceholder from './EventListItemPlaceholder';\nimport EventFilters from './EventFilters';\nimport { getEventsFromFirestore, dataFromSnapshot } from '../../../app/firestore/firestoreService';\nimport { listenToEvents } from '../eventActions';\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../../../app/async/asyncReducer';\nexport default function EventDashboard() {\n  const {\n    events\n  } = useSelector(state => state.event);\n  const {\n    loading\n  } = useSelector(state => state.async);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(asyncActionStart());\n    const unsubscribe = getEventsFromFirestore({\n      next: snapshot => {\n        dispatch(listenToEvents(snapshot.docs.map(docSnapshot => dataFromSnapshot(docSnapshot))));\n        dispatch(asyncActionFinish());\n      },\n      error: error => dispatch(asyncActionError(error)),\n      complete: () => console.log(\"you'll never see this message\")\n    });\n    return unsubscribe;\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListItemPlaceholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EventListItemPlaceholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(EventList, {\n    events: events,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EventFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/massimilianocorvino/Desktop/temp/revents/src/features/events/eventDashboard/EventDashboard.jsx"],"names":["React","useEffect","Grid","EventList","useSelector","useDispatch","EventListItemPlaceholder","EventFilters","getEventsFromFirestore","dataFromSnapshot","listenToEvents","asyncActionStart","asyncActionFinish","asyncActionError","EventDashboard","events","state","event","loading","async","dispatch","unsubscribe","next","snapshot","docs","map","docSnapshot","error","complete","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,sBAAT,EAAiCC,gBAAjC,QAAyD,yCAAzD;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,gBAA9C,QAAsE,iCAAtE;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAaX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcd,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACG,KAAlB,CAA/B;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAI;AACZmB,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACA,UAAMU,WAAW,GAACb,sBAAsB,CAAC;AACvCc,MAAAA,IAAI,EAAEC,QAAQ,IAAI;AAChBH,QAAAA,QAAQ,CAACV,cAAc,CAACa,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,WAAW,IAAIjB,gBAAgB,CAACiB,WAAD,CAAjD,CAAD,CAAf,CAAR;AACAN,QAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACD,OAJsC;AAKvCe,MAAAA,KAAK,EAAEA,KAAK,IAAIP,QAAQ,CAACP,gBAAgB,CAACc,KAAD,CAAjB,CALe;AAMvCC,MAAAA,QAAQ,EAAC,MAAKC,OAAO,CAACC,GAAR,CAAY,+BAAZ;AANyB,KAAD,CAAxC;AAQA,WAAOT,WAAP;AACD,GAXQ,EAWN,CAACD,QAAD,CAXM,CAAT;AAaA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,iBACN,uDACE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,eAOE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEH,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAUE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF;AAgBD","sourcesContent":["import React, {useEffect} from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EventList from './EventList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EventListItemPlaceholder from './EventListItemPlaceholder';\nimport EventFilters from './EventFilters';\nimport { getEventsFromFirestore, dataFromSnapshot } from '../../../app/firestore/firestoreService';\nimport { listenToEvents } from '../eventActions';\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../../../app/async/asyncReducer';\n\nexport default function EventDashboard() {\n  const { events } = useSelector((state) => state.event);\n  const { loading } = useSelector((state) => state.async);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(asyncActionStart())\n    const unsubscribe=getEventsFromFirestore({\n      next: snapshot => {\n        dispatch(listenToEvents(snapshot.docs.map(docSnapshot => dataFromSnapshot(docSnapshot))));\n        dispatch(asyncActionFinish())\n      },\n      error: error => dispatch(asyncActionError(error)),\n      complete:()=> console.log(\"you'll never see this message\")\n    })\n    return unsubscribe\n  }, [dispatch])\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        {loading &&\n          <>\n            <EventListItemPlaceholder />\n            <EventListItemPlaceholder />\n          </>\n        }\n        <EventList events={events} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventFilters />\n      </Grid.Column>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}