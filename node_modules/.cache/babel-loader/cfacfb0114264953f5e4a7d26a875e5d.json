{"ast":null,"code":"var _jsxFileName = \"/Users/massimilianocorvino/Desktop/temp/revents/src/features/events/eventDetailed/EventDetailedInfo.jsx\";\nimport React, { useState } from 'react';\nimport { Segment, Grid, Icon, Button } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport EventDetailedMap from './EventDetailedMap';\nexport default function EventDetailedInfo({\n  event\n}) {\n  const [mapOpen, setMapOpenToggle] = useState(false);\n  return /*#__PURE__*/React.createElement(Segment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    attached: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: \"large\",\n    color: \"teal\",\n    name: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, event.description)))), /*#__PURE__*/React.createElement(Segment, {\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"calendar\",\n    size: \"large\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, format(event.date, 'MMMM d, yyyy h:mm a'))))), /*#__PURE__*/React.createElement(Segment, {\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"marker\",\n    size: \"large\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, event.venue.address)), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setMapOpenToggle(!mapOpen),\n    color: \"teal\",\n    size: \"tiny\",\n    content: mapOpen ? 'Hide map' : 'Show map',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })))), mapOpen && /*#__PURE__*/React.createElement(EventDetailedMap, {\n    latLng: event.venue.latLng,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/massimilianocorvino/Desktop/temp/revents/src/features/events/eventDetailed/EventDetailedInfo.jsx"],"names":["React","useState","Segment","Grid","Icon","Button","format","EventDetailedMap","EventDetailedInfo","event","mapOpen","setMapOpenToggle","description","date","venue","address","latLng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,QAA0C,mBAA1C;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,eAAe,SAASC,iBAAT,CAA2B;AAACC,EAAAA;AAAD,CAA3B,EAAoC;AAC/C,QAAM,CAACC,OAAD,EAAUC,gBAAV,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACI,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,KAAK,EAAC,MAAzB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIQ,KAAK,CAACG,WAAV,CADJ,CAJJ,CADJ,CADA,eAWA,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,MAAM,CAACG,KAAK,CAACI,IAAP,EAAa,qBAAb,CAAb,CADJ,CAJJ,CADJ,CAXA,eAqBA,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,KAAK,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,KAAK,CAACK,KAAN,CAAYC,OAAnB,CADJ,CAJJ,eAOI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAAC,CAACD,OAAF,CADnC;AAEI,IAAA,KAAK,EAAC,MAFV;AAEiB,IAAA,IAAI,EAAC,MAFtB;AAGI,IAAA,OAAO,EAAEA,OAAO,GAAG,UAAH,GAAgB,UAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ,CArBA,EAsCCA,OAAO,iBACR,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAED,KAAK,CAACK,KAAN,CAAYE,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCA,CADJ;AA4CH","sourcesContent":["import React, { useState } from 'react';\nimport {Segment, Grid, Icon, Button} from 'semantic-ui-react';\nimport {format} from 'date-fns';\nimport EventDetailedMap from './EventDetailedMap';\n\nexport default function EventDetailedInfo({event}) {\n    const [mapOpen, setMapOpenToggle] = useState(false);\n    return (\n        <Segment.Group>\n        <Segment attached=\"top\">\n            <Grid>\n                <Grid.Column width={1}>\n                    <Icon size=\"large\" color=\"teal\" name=\"info\"/>\n                </Grid.Column>\n                <Grid.Column width={15}>\n                    <p>{event.description}</p>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n        <Segment attached>\n            <Grid verticalAlign=\"middle\">\n                <Grid.Column width={1}>\n                    <Icon name=\"calendar\" size=\"large\" color=\"teal\"/>\n                </Grid.Column>\n                <Grid.Column width={15}>\n                    <span>{format(event.date, 'MMMM d, yyyy h:mm a')}</span>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n        <Segment attached>\n            <Grid verticalAlign=\"middle\">\n                <Grid.Column width={1}>\n                    <Icon name=\"marker\" size=\"large\" color=\"teal\"/>\n                </Grid.Column>\n                <Grid.Column width={11}>\n                    <span>{event.venue.address}</span>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Button \n                        onClick={() => setMapOpenToggle(!mapOpen)}\n                        color=\"teal\" size=\"tiny\" \n                        content={mapOpen ? 'Hide map' : 'Show map'}\n                    />\n                </Grid.Column>\n            </Grid>\n        </Segment>\n        {mapOpen &&\n        <EventDetailedMap latLng={event.venue.latLng} />}\n    </Segment.Group>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}