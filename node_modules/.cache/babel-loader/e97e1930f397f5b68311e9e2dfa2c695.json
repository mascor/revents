{"ast":null,"code":"var _jsxFileName = \"/Users/massimilianocorvino/Desktop/temp/revents/src/features/sandbox/Sandbox.jsx\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { increment, decrement } from '../sandbox/testReducer';\nimport { openModal } from '../../app/common/modals/modalReducer';\nimport TestPlaceInput from './TestPlaceInput';\nimport TestMap from './TestMap';\nexport default function Sandbox() {\n  const dispatch = useDispatch();\n  const [target, setTarget] = useState(null);\n  const data = useSelector(state => state.test.data);\n  const {\n    loading\n  } = useSelector(state => state.async);\n  const defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  };\n  const [location, setLocation] = useState(defaultProps);\n\n  function handleSetLocation(latLng) {\n    setLocation({ ...location,\n      center: {\n        lat: latLng.lat,\n        lng: latLng.lng\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Testing 123\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"The data is: \", data), /*#__PURE__*/React.createElement(Button, {\n    name: \"increment\",\n    loading: loading && target === 'increment',\n    onClick: e => {\n      dispatch(increment(20));\n      setTarget(e.target.name);\n    },\n    content: \"Increment\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"decrement\",\n    loading: loading && target === 'decrement',\n    onClick: e => {\n      dispatch(decrement(10));\n      setTarget(e.target.name);\n    },\n    content: \"Decrement\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(openModal({\n      modalType: 'TestModal',\n      modalProps: {\n        data\n      }\n    })),\n    content: \"Open Modal\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TestPlaceInput, {\n    setLocation: handleSetLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TestMap, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/massimilianocorvino/Desktop/temp/revents/src/features/sandbox/Sandbox.jsx"],"names":["React","useState","useSelector","useDispatch","Button","increment","decrement","openModal","TestPlaceInput","TestMap","Sandbox","dispatch","target","setTarget","data","state","test","loading","async","defaultProps","center","lat","lng","zoom","location","setLocation","handleSetLocation","latLng","e","name","modalType","modalProps","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { increment, decrement } from '../sandbox/testReducer';\nimport { openModal } from '../../app/common/modals/modalReducer';\nimport TestPlaceInput from './TestPlaceInput';\nimport TestMap from './TestMap';\n\nexport default function Sandbox() {\n  const dispatch = useDispatch();\n  const [target, setTarget] = useState(null);\n  const data = useSelector((state) => state.test.data);\n  const { loading } = useSelector((state) => state.async);\n  const defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33,\n    },\n    zoom: 11,\n  };\n  const [location, setLocation] = useState(defaultProps);\n\n  function handleSetLocation(latLng) {\n    setLocation({ ...location, center: { lat: latLng.lat, lng: latLng.lng } });\n  }\n\n  return (\n    <>\n      <h1>Testing 123</h1>\n      <h3>The data is: {data}</h3>\n      <Button\n        name='increment'\n        loading={loading && target === 'increment'}\n        onClick={(e) => {\n          dispatch(increment(20));\n          setTarget(e.target.name)\n        }}\n        content='Increment'\n        color='green'\n      />\n      <Button\n        name='decrement'\n        loading={loading && target === 'decrement'}\n        onClick={(e) => {\n          dispatch(decrement(10));\n          setTarget(e.target.name)\n        }}\n        content='Decrement'\n        color='red'\n      />\n      <Button\n        onClick={() =>\n          dispatch(openModal({ modalType: 'TestModal', modalProps: { data } }))\n        }\n        content='Open Modal'\n        color='teal'\n      />\n      <div style={{ marginTop: 15 }}>\n        <TestPlaceInput setLocation={handleSetLocation} />\n        <TestMap location={location} />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}